## [0.2.14]
- `TokenPay`
  - Moved `options` parameter to the 4th position in the `Ordinalsbot` constructor.
  - Added `TOKENPAY_API_KEY` as an optional 3rd parameter in the `Ordinalsbot` constructor to support TokenPay functionality.

  ### Example
  ```js
  // Updated constructor usage
  const ordinalsbotObj = new Ordinalsbot(API_KEY, "testnet", TOKENPAY_API_KEY, options);

  // Usage with only the TOKENPAY_API_KEY
  const ordinalsbotObj = new Ordinalsbot(API_KEY, "testnet", TOKENPAY_API_KEY);

  // Usage with only the options parameter
  const ordinalsbotObj = new Ordinalsbot(API_KEY, "testnet", undefined, options);

  // Or without optional parameters
  const ordinalsbotObj = new Ordinalsbot(API_KEY, "testnet");
  ```

## [0.2.13]
- `TokenPay`
  - Added `createRuneOrder` - method to create rune order.
  - Added `createPaymentPSBT` - method for create payment psbt for an order.
  - Added `checkTransactionAsTxid` - method to checks the transaction status using the provided transaction ID (txid).
  - Added `getOrder` - method to retrieve the details of an order.
  - Added `accountWithdraw` - method to initiates an account withdrawal request.
  - Added `getAccountWithdraw` - method to retrieves the account withdrawal details.
  - Added `getAccountBalance` - method to retrieves the account balance.

## [0.2.12]
- `Inscription`
  - Updated `createSpecialSatsPSBT` - method request and response to create special sats psbt and xverse wallet support.

## [0.2.11]
- `Inscription`
  - Updated `createDirectOrder` - method to create multi parent parent child inscription order.
  - Added `createParentChildPsbt` - method for create parent child psbt for an order.

## [0.2.10]
- Fixed
  - Fixed the issue with the axios error when using sdk on frontend

## [0.2.9]
- `Inscription`
  - createCollection - Added phases in the request and response object.
  - updateCollectionPhases - Added method for updating the phases of a collection.
  - getAllocation - Added a method to check allowed and claimed inscription in collection phases for an address

## [0.2.8]
- Environment support added for all APIs except `marketplace` and `launchpad`
  - Environment can be `tesnet`, `signet`, `mainnet`
  - Default environment is `mainnet`
  - Backward compatibility maintained for `live` as mainnet environment and `dev` as testnet environment

## [0.2.5]
- `Types`
  - Added `direct` inscription types

- `Inscription`
  - Added `inscribe` endpoint to enable support for direct inscriptions

## [0.2.4]
- `Marketplace`

  - deList - Added the confirmDelisting method after signTransaction.
  - confirmDeListing - Added confirmation method to delist the ordinal from the listing.

## [0.2.3]
- `Types`
  - Added `delegates` support to inscriptions and rune etching
  - Added `metaprotocol` to files or delegates array element
  - Added `orderType`: managed and rune-launchpad-mint
  - Added `BatchModeType`: for batchMode price and order requests

- `Inscription`
  - Updated `getPrice` with type and batchMode

## [0.2.2]
- `Types`

  - Added OrderType enum
  - Added Runes Etching Types
  - Added 'sent' to InscriptionFile

- `Inscription`
  - Added Rune Etching Order endpoint

## [0.2.1]
- `Types`

  - Added InscriptionOrderState enum
  - Updated InscriptionTextOrderRequest so the examples script runs
  - Added testing section in README

## [0.2.0]
- `Types`

  - type syncronization with OrdinalsBot API

## [0.1.5]

#### APIs Added
- `Marketplace`

  - getListing - Updated request and response object.

- `Launchpad`

  - constructor - Added method constructor for initialization of launchpad instance
  - createMarketPlace - Added method for creating a launchpad marketplace
  - createLaunchpad - Added method for creating a launchpad listing
  - getLaunchpadPSBT - Added method for retrieving the launchpad PSBT to sign transaction
  - saveLaunchpad - Added method for updating the signed PSBT on the launchpad
  - getLaunchpadListing - Added method for retrieving the active launchpad listing
  - getAllocation - Added method for buyers to check allowed and claimed inscription for launchpad phases
  - confirmPaddingOutputs - Added method to check if the padding outputs are available in the buyer account
  - setupPaddingOutputs - Added method to set up if the padding outputs are not available in the buyer account
  - createLaunchpadOffer - Added method for buyers to request the ordinal from launchpad phase to buy
  - submitLaunchpadOffer - Added method to update the signed PSBT and broadcast the buyer transaction


- `Mempool`

  - constructor - Added method constructor for initialization of Mempool instance
  - getFeeEstimation - Added method to gets the recommended fee estimation 
  - getAddressUtxo - Added method to Gets the UTXO (unspent transaction outputs) for a given address from the Mempool API. 

- `Satextractor`

  - constructor - Added method constructor for initialization of satextractor instance
  - extract - Added method to extracts data using the Satextractor API 


- `Satscanner`

  - constructor - Added method constructor for initialization of Satscanner instance
  - getSupportedSatributes - Added method to Retrieves the supported Satributes 
  - findSpecialRanges - Added method to finds special ranges using the Satscanner API 
  - findSpecialRangesUtxo - Added method to finds special ranges UTXO using the Satscanner API 

- `Ordinalsbot`

  - Added `Launchpad` instance in the Ordinalsbot class
  - Added `Mempool` instance in the Ordinalsbot class
  - Added `Satextractor` instance in the Ordinalsbot class
  - Added `Satscanner` instance in the Ordinalsbot class
  - Added properties for the classes.
  
  ```
  import { Ordinalsbot } from 'ordinalsbot'

  // If no parameter is given, the default environment is 'live'
  const ordinalsbotObj = new Ordinalsbot(API_KEY, 'dev')
  const marketPlace = ordinalsbotObj.MarketPlace()
  const inscription = ordinalsbotObj.Inscription()
  const launchpad = ordinalsbotObj.Launchpad()
  const mempool = ordinalsbotObj.Mempool()
  const satextractor = ordinalsbotObj.Satextractor()
  const satscanner = ordinalsbotObj.Satscanner()

  ```

## [0.1.4]

#### APIs Added

- `Inscription`

  - createSpecialSats - Added method to create special sats.


#### APIs Updated

- `Inscription`

  - getPrice - Updated the request and response object.
  - createOrder - Updated the request and response object.
  - createCollection - Updated the request and response object.
  - createCollectionOrder - Updated the request and response object.
  - createTextOrder - Updated the request and response object.

- Ordinalsbot  

  - Updated Usage of Ordinalsbot.
  
  ```
  import { Ordinalsbot } from 'ordinalsbot'

  // If no parameter is given, the default environment is 'live'
  const ordinalsbotObj = new Ordinalsbot(API_KEY, 'dev')
  const marketPlace = ordinalsbotObj.MarketPlace
  const inscription = ordinalsbotObj.Inscription

  ```


## [0.1.3]

#### APIs Updated

- `Marketplace`

  - confirmListing - Added method to update the signedPSBT on a newly created listing.
  - reListing - Added method to update the price of existing listing ordinal.
  - confirmReListing - Added method to update the signedPSBT on a new relisting.
  - deList - Added method to remove the existing listing.
  - transfer - Updated the method to support transfer of multiple ordinals.

## [0.1.2]

#### APIs Updated

- `Inscription`

  - Added metadata support for insrciption orders.
  - Added brotli compression support for inscription orders.

## [0.1.1]

#### APIs Updated

- `Marketplace`

  - createListing - Added walletProvider parameter
  - createOffer  - Added walletProvider parameter
  - setupPaddingOutputs  - Added walletProvider parameter

## [0.1.0]

#### APIs exposed

- `Inscription`

  - constructor
  - getPrice
  - createOrder
  - getOrder
  - createCollection
  - createCollectionOrder
  - createTextOrder
  - getInventory
  - setReferralCode
  - getReferralStatus

- `Marketplace`
  - constructor
  - createMarketPlace
  - createListing
  - saveListing
  - getListing
  - createOffer
  - submitOffer
  - confirmPaddingOutputs
  - setupPaddingOutputs
